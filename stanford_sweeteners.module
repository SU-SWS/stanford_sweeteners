<?php
/**
 * @file
 * Code for the Stanford Sweeteners feature.
 */

include_once 'stanford_sweeteners.features.inc';

/**
 * Implements hook_help().
 */
function stanford_sweeteners_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    /*
     *case 'admin/help#block':
     *  return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array('@blocks' => url('admin/structure/block'))) . '</p>';
     */
    case 'admin/help#stanford_sweeteners':
      return '<p>' . t('Contact your site administrator') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function stanford_sweeteners_menu() {
  $items = array();
  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function stanford_sweeteners_libraries_info() {
  $libraries = array();

  $libraries['slick'] = array(
    'name' => 'Slick Carousel',
    'vendor url' => 'http://kenwheeler.github.io/slick/',
    'download url' => 'https://github.com/kenwheeler/slick/archive/1.4.0.zip',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/(\d+\.?\d+\.?\d+\.?)/',
      'lines' => 3,
    ),
    'files' => array(
      'js' => array(
        'slick/slick.min.js',
      ),
      'css' => array(
        'slick/slick.css',
        'slick/slick-theme.css',
      )
    ),
  );

  return $libraries;
}

/**
 * Implements pre_render so we can attach css or libraries if needed.
 * @param  [type] &$view [description]
 * @return [type]        [description]
 */
function stanford_sweeteners_views_pre_render(&$view) {
  if (strpos($view->name, "sweetener") !== FALSE) {
    $class = $view->display_handler->get_option('css_class');
    if (strpos($class, "slick-carousel") !== FALSE) {
      // Generate a random ID to use.
      $id = "srand-" . md5(rand(0, 100000) + time());
      $view->display_handler->set_option('css_class', $class . " " . $id);
      $view->slick_id = $id;
    }
  }
}

/**
 * [stanford_sweeteners_load_slick_settings description]
 * @param  [type] $type [description]
 * @param  [type] $opts [description]
 * @return [type]       [description]
 */
function stanford_sweeteners_load_slick_settings($id, $type = "default", $opts = array()) {
  libraries_load('slick');
  $settings = stanford_sweeteners_get_slick_settings($type, $opts);
  drupal_add_js(array("stanford_sweeteners" => array($id => $settings)), 'setting');
  drupal_add_js(drupal_get_path("module", "stanford_sweeteners") . "/js/stanford_sweeteners.slick.js");
  drupal_add_css(drupal_get_path("module", "stanford_sweeteners") . "/css/stanford_sweeteners.css");
}

/**
 * [stanford_sweeteners_get_slick_settings description]
 * @param  string $type [description]
 * @return [type]       [description]
 */
function stanford_sweeteners_get_slick_settings($type = "default", $opts = array()) {
  $settings = array();

  // Default.
  // -----------------------------------------------------------------

  $settings['default'] = array(
    "infinite" => TRUE,
    "variableHeight" => TRUE,
    "slidesToShow" => 1,
    "slidesToScroll" => 1,
  );

  // Redundant. Cuz its funny.
  // -----------------------------------------------------------------

  $settings['redundant'] = $opts;

  // 6 Items
  // -----------------------------------------------------------------
  $settings["6 items"] = array(
    "dots" => TRUE,
    "variableHeight" => TRUE,
    "infinite" => TRUE,
    "speed" => 500,
    "easing" => "easeOutQuint",
    "slidesToShow" => 6,
    "slidesToScroll" => 6,
    "dots" => TRUE,
    "responsive" => array(
      // 1199
      array(
        "breakpoint" => 1199,
        "settings" => array(
          "slidesToShow" => 5,
          "slidesToScroll" => 5,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 979
      array(
        "breakpoint" => 979,
        "settings" => array(
          "slidesToShow" => 4,
          "slidesToScroll" => 4,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 759
      array(
        "breakpoint" => 759,
        "settings" => array(
          "slidesToShow" => 3,
          "slidesToScroll" => 3,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 541
      array(
        "breakpoint" => 541,
        "settings" => array(
          "slidesToShow" => 2,
          "slidesToScroll" => 2,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 410
      array(
        "breakpoint" => 410,
        "settings" => array(
          "slidesToShow" => 1,
          "slidesToScroll" => 1,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
    ),
  );

  // 5 Items
  // -----------------------------------------------------------------
  $settings["5 items"] = array(
    "dots" => TRUE,
    "variableHeight" => TRUE,
    "infinite" => TRUE,
    "speed" => 500,
    "easing" => "easeOutQuint",
    "slidesToShow" => 5,
    "slidesToScroll" => 5,
    "dots" => TRUE,
    "responsive" => array(
      // 979
      array(
        "breakpoint" => 979,
        "settings" => array(
          "slidesToShow" => 4,
          "slidesToScroll" => 4,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 759
      array(
        "breakpoint" => 759,
        "settings" => array(
          "slidesToShow" => 3,
          "slidesToScroll" => 3,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 541
      array(
        "breakpoint" => 541,
        "settings" => array(
          "slidesToShow" => 2,
          "slidesToScroll" => 2,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      // 410
      array(
        "breakpoint" => 410,
        "settings" => array(
          "slidesToShow" => 1,
          "slidesToScroll" => 1,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
    ),
  );

  // 4 Items
  // -----------------------------------------------------------------
  $settings["4 items"] = $settings["5 items"];
  $settings["4 items"]["slidesToShow"] = 4;
  $settings["4 items"]["slidesToScroll"] = 5;

  // 3 Items
  // -----------------------------------------------------------------
  $settings["3 items"] = array(
    "dots" => TRUE,
    "variableHeight" => TRUE,
    "infinite" => TRUE,
    "speed" => 500,
    "easing" => "easeOutQuint",
    "slidesToShow" => 3,
    "slidesToScroll" => 3,
    "dots" => TRUE,
    "responsive" => array(
      array(
        "breakpoint" => 640,
        "settings" => array(
          "slidesToShow" => 2,
          "slidesToScroll" => 2,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
      array(
        "breakpoint" => 480,
        "settings" => array(
          "slidesToShow" => 1,
          "slidesToScroll" => 1,
          "dots" => TRUE,
        ),
      ),
      array(
        "breakpoint" => 300,
        "settings" => array(
          "slidesToShow" => 1,
          "slidesToScroll" => 1,
          "dots" => TRUE,
        ),
      ),
    ),
  );

  // 1 Item
  // -----------------------------------------------------------------
  $settings["2 items"] = array(
    "dots" => TRUE,
    "variableHeight" => TRUE,
    "infinite" => TRUE,
    "speed" => 500,
    "easing" => "easeOutQuint",
    "slidesToShow" => 2,
    "slidesToScroll" => 2,
    "dots" => TRUE,
    "responsive" => array(
      array(
        "breakpoint" => 300,
        "settings" => array(
          "slidesToShow" => 1,
          "slidesToScroll" => 1,
          "infinite" => TRUE,
          "dots" => TRUE,
        ),
      ),
    ),
  );

  // 1 Item
  // -----------------------------------------------------------------
  $settings["1 item"] = array(
    "dots" => TRUE,
    "variableHeight" => TRUE,
    "infinite" => TRUE,
    "speed" => 500,
    "easing" => "easeOutQuint",
    "slidesToShow" => 1,
    "slidesToScroll" => 1,
    "dots" => TRUE,
  );

  // Merge in the passed options.
  if (isset($settings[$type])) {
    $settings[$type] = array_merge($settings[$type], $opts);
  }

  return isset($settings[$type]) ? $settings[$type] : FALSE;
}

/**
 * Implements hook_form_alter().
 */
function stanford_sweeteners_form_bean_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form["bean"]["#value"]->type) && $form["bean"]["#value"]->type == "stanford_sweetener_carousel") {
    $form['field_sweetener_etr']["#states"]["visible"]['.field-name-field-sweet-select-choice input']["value"] = "manual";
    $form['field_stanford_subsite_sub_tags']["#states"]["visible"]['.field-name-field-sweet-select-choice input']["value"] = "subsite";
    $form['field_s_sweet_category']["#states"]["visible"]['.field-name-field-sweet-select-choice input']["value"] = "type";
    $form['field_s_sweet_audience']["#states"]["visible"]['.field-name-field-sweet-select-choice input']["value"] = "audience";
    $form['revision']["#access"] = array("edit bean view mode");
    $form['redirect']['#access'] = FALSE;
  }
}
